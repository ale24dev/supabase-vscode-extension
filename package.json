{
  "name": "vscode-supabase-extension",
  "displayName": "Supabase",
  "description": "Supabase Extension for VS Code and GitHub Copilot.",
  "version": "0.0.10",
  "engines": {
    "vscode": "^1.90.0"
  },
  "main": "./dist/extension.js",
  "publisher": "Supabase",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/supabase-community/supabase-vscode-extension"
  },
  "categories": [
    "AI",
    "Chat",
    "Other"
  ],
  "keywords": [
    "Supabase",
    "Databases",
    "Postgres"
  ],
  "scripts": {
    "install:all": "npm install && cd webview-ui && npm install",
    "start:webview": "cd webview-ui && npm run start",
    "build:webview": "cd webview-ui && npm run build",
    "vscode:prepublish-old": "npm run compile",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "compile": "npm run check-types && node esbuild.js",
    "check-types": "tsc --noEmit",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "vscode:prepublish": "npm run package",
    "package": "npm run check-types && node esbuild.js --production"
  },
  "dependencies": {
    "@scaleleap/pg-format": "^1.0.0",
    "await-to-js": "^3.0.0",
    "http": "^0.0.1-security",
    "lodash": "^4.17.21",
    "npm-run-all": "^4.1.5",
    "path": "^0.12.7"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/lodash": "^4.14.199",
    "@types/node": "18.x",
    "@types/vscode": "^1.86.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "axios": "^1.7.4",
    "esbuild": "^0.19.11",
    "esbuild-plugin-copy": "^2.1.1",
    "eslint": "^7.19.0",
    "glob": "^7.1.6",
    "prettier": "^2.2.1",
    "typescript": "^4.1.3",
    "vscode-test": "^1.5.0"
  },
  "activationEvents": [],
  "extensionDependencies": [
    "github.copilot-chat"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "vscode-supabase-extension",
          "title": "Supabase",
          "icon": "dist/assets/logo.svg"
        }
      ]
    },
    "views": {
      "vscode-supabase-extension": [
        {
          "id": "connectSupabase",
          "name": "Connect ",
          "contextualTitle": "Connect your Supabase instance",
          "type": "tree",
          "when": "!workspaceState.isConnected"
        },
        {
          "id": "database",
          "name": "Database",
          "contextualTitle": "Local database",
          "visibility": "hidden",
          "when": "workspaceState.isConnected"
        }
      ]
    },
    "chatParticipants": [
      {
        "id": "supabase.clippy",
        "name": "supabase",
        "description": "Ask Supabase Clippy about your database.",
        "commands": [
          {
            "name": "show",
            "description": "Shows all tables."
          },
          {
            "name": "migration",
            "description": "Create a new schema migration."
          }
        ]
      }
    ],
    "commands": [
      {
        "command": "connectSupabase.link_api_port",
        "title": "Link API url"
      },
      {
        "command": "databaseProvider.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "databaseProvider.disconnect",
        "title": "Disconnect",
        "icon": "$(sign-out)"
      },
      {
        "command": "databaseProvider.create_migration",
        "title": "Create new migration",
        "icon": "$(add)"
      },
      {
        "command": "databaseProvider.open_table",
        "title": "Open current table",
        "icon": "$(link-external)"
      },
      {
        "command": "databaseProvider.create_migration_cmd",
        "title": "Create new migration",
        "icon": "$(run)"
      },
      {
        "command": "databaseProvider.db_reset",
        "title": "Run supabase db reset command",
        "icon": "$(run)"
      },
      {
        "command": "databaseProvider.db_pull",
        "title": "Run supabase db pull command",
        "icon": "$(run)"
      },
      {
        "command": "databaseProvider.db_push",
        "title": "Run supabase db push command",
        "icon": "$(run)"
      },
      {
        "command": "databaseProvider.gen_types",
        "title": "Run supabase generate types",
        "icon": "$(run)"
      },
      {
        "command": "databaseProvider.open_db_function",
        "title": "Open db function source code",
        "icon": "$(link-external)"
      }
    ],
    "viewsWelcome": [
      {
        "view": "connectSupabase",
        "contents": "Connect to your local Supabase instance. \n[Connect](command:connectSupabase.link_api_port)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "databaseProvider.refresh",
          "when": "view == database && workspaceState.isConnected",
          "group": "navigation@1"
        },
        {
          "command": "databaseProvider.disconnect",
          "when": "view == database && workspaceState.isConnected",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "databaseProvider.create_migration",
          "when": "view == database && viewItem == database.migrations",
          "group": "inline"
        },
        {
          "command": "databaseProvider.open_table",
          "when": "view == database && viewItem == database.tables.private.children",
          "group": "inline"
        },
        {
          "command": "databaseProvider.open_table",
          "when": "view == database && viewItem == database.tables.public.children",
          "group": "inline"
        },
        {
          "command": "databaseProvider.open_table",
          "when": "view == database && viewItem == database.views.children",
          "group": "inline"
        },
        {
          "command": "databaseProvider.create_migration_cmd",
          "when": "view == database && viewItem == database.cli.migration_new",
          "group": "inline"
        },
        {
          "command": "databaseProvider.db_reset",
          "when": "view == database && viewItem == database.cli.db_reset",
          "group": "inline"
        },
        {
          "command": "databaseProvider.db_pull",
          "when": "view == database && viewItem == database.cli.db_pull",
          "group": "inline"
        },
        {
          "command": "databaseProvider.db_push",
          "when": "view == database && viewItem == database.cli.db_push",
          "group": "inline"
        },
        {
          "command": "databaseProvider.gen_types",
          "when": "view == database && viewItem == database.cli.gen_types",
          "group": "inline"
        },
        {
          "command": "databaseProvider.open_db_function",
          "when": "view == database && viewItem == database.db_functions.children",
          "group": "inline"
        }
      ]
    }
  },
  "_moduleAliases": {
    "@": "./dist"
  }
}
